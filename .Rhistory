source('~/R/Statistical Modeling/PSET4/elmer.r', echo=TRUE)
#h
margins::cplot(mod2, x = "budgetM", what = "effect" , scatter = TRUE, main = "TEST")
#h
margins::cplot(mod2, x = "budgetM", what = "effect" , scatter = TRUE, main = "TEST")
summary(mod1)
summary(mod1)
summary(mod2)
plot(mod2)
print(m)
#h
margins::cplot(mod2, x = "budgetM", what = "effect" , scatter = TRUE, main = "TEST")
#b
summary(mod3)
ggplot(preds_training,
aes(x = preds,y = resids))+
geom_point()+
labs(title = "Resids V Preds Training Data")
ggplot(preds_testing,
aes(x = preds,y = resids))+
geom_point()+
labs(title = "Resids V Preds Testing Data")
labs(title = "Resids V Preds Training Data")
ggplot(preds_training,
aes(x = preds,y = resids))+
geom_point()+
labs(title = "Resids V Preds Training Data")+
geom_abline(intercept = 0, slope = 0, color = "red", linetype = "dashed")
ggplot(preds_testing,
aes(x = preds,y = resids))+
geom_point()+
labs(title = "Resids V Preds Testing Data")+
geom_abline(intercept = 0, slope = 0, color = "red", linetype = "dashed")
R2(preds_training$preds, preds_training$grossM)
R2(preds_testing$preds, preds_testing$grossM)
R2(preds_training$preds, preds_training$grossM)
R2(preds_testing$preds, preds_testing$grossM)
summary(mod3)
R2(preds_training$preds, preds_training$grossM)
R2(preds_testing$preds, preds_testing$grossM)
cat(R2("test",preds_training$preds, preds_training$grossM)
cat(R2("test",preds_training$preds, preds_training$grossM))
RMSE(preds_training$preds, preds_training$grossM) # <- obs and predicted [grossM , Preds]???
RMSE(preds_testing$preds, preds_testing$grossM) # <- obs and predicted [grossM , Preds]???
R2(preds_training$preds, preds_training$grossM)
R2(preds_testing$preds, preds_testing$grossM)
R2(preds_training$preds, preds_training$grossM)
R2(preds_testing$preds, preds_testing$grossM)
RMSE(preds_training$preds, preds_training$grossM)
RMSE(preds_testing$preds, preds_testing$grossM)
RMSE(preds_training$preds, preds_training$grossM)
RMSE(preds_testing$preds, preds_testing$grossM)
library(knitr)
# change to your own working directory
knitr::opts_knit$set(root.dir = "C:/Users/Elmer/Documents/R/Statistical Modeling/PSET5")
setwd("C:/Users/Elmer/Documents/R/Statistical Modeling/PSET5")
# set seed
set.seed(1868)
options(width=70)
# general rchunk code options
opts_chunk$set(tidy.opts=list(width.wrap=50),tidy=TRUE, size = "vsmall")
opts_chunk$set(message = FALSE,
warning = FALSE,
cache = TRUE,
autodep = TRUE,
cache.comments = FALSE,
collapse = TRUE,
fig.width = 5,
fig.height = 4,
fig.align='center')
library("MASS")
library("tidyverse")
library("plotROC")
data(Boston)
set.seed(1861)
trainSize <- 0.75
train_idx <-sample(1:nrow(Boston), size = floor(nrow(Boston)*trainSize))
housing <- Boston %>% mutate(PriceyHome = ifelse(medv > 40, 1,0), chas_factor = factor(chas))
housing_train <- housing%>% slice(train_idx)
housing_test <- housing%>% slice(-train_idx)
housing_train <- housing_train %>% group_by(PriceyHome)
sum_train <- housing_train %>% summarise_all(list(mean = mean), na.rm = TRUE)
housing_test <- housing_test %>% group_by(PriceyHome)
sum_test <- housing_test %>% summarise_all(list(mean = mean), na.rm = TRUE)
ggplot(housing_train) + geom_point(aes(x = housing_train$zn, y = housing_train$PriceyHome, colour = housing_train$PriceyHome >0), shape = 36, size=6) +
scale_colour_manual(name = 'PriceyHome', values = setNames(c('green','red'),c(T, F))) +
xlab('proportion of residential land zoned for lots over 25,000 sq.ft.') + ylab('PriceyHome')
ggplot(housing_train) + geom_point(aes(x = housing_train$age, y = housing_train$PriceyHome, colour = housing_train$PriceyHome >0),size = 2) +
scale_colour_manual(name = 'PriceyHome', values = setNames(c('green','red'),c(T, F))) +
xlab('Age') + ylab('PriceyHome')
ggplot(housing_train) + geom_point(aes(x = housing_train$lstat, y = housing_train$PriceyHome, colour = housing_train$PriceyHome >0),size = 2) +
scale_colour_manual(name = 'PriceyHome', values = setNames(c('green','red'),c(T, F))) +
xlab('lower status of the population (percent).') + ylab('PriceyHome')
log_train_mod = glm(PriceyHome ~ chas,
data = housing_train,
family = binomial)
log_test_mod = glm(PriceyHome ~ chas,
data = housing_test,
family = binomial)
log_train_mod_plus = glm(PriceyHome ~ chas + crim + lstat + ptratio + zn + rm + rad + nox,
data = housing_train,
family = binomial)
log_test_mod_plus = glm(PriceyHome ~ chas + crim + lstat + ptratio + zn + rm + rad + nox,
data = housing_test,
family = binomial)
summary(log_train_mod_plus)
preds_train_DF <- data.frame(
scores_train = predict(log_train_mod_plus,
type = "response"),
housing_train
)
preds_test_DF <- data.frame(
scores_test = predict(log_test_mod_plus,
type = "response"),
housing_test
)
preds_train_DF <-  preds_train_DF %>% mutate(PosNeg05 =
ifelse(scores_train > 0.5 & PriceyHome == 1, "TP",
ifelse(scores_train > 0.5 & PriceyHome == 0, "FP",
ifelse(scores_train <= 0.5 & PriceyHome == 0, "TN",
ifelse(scores_train <= 0.5 & PriceyHome == 0, "FN",0)))))
preds_test_DF <-  preds_test_DF %>% mutate(PosNeg05 =
ifelse(scores_test > 0.5 & PriceyHome == 1, "TP",
ifelse(scores_test > 0.5 & PriceyHome == 0, "FP",
ifelse(scores_test <= 0.5 & PriceyHome == 0, "TN",
ifelse(scores_test <= 0.5 & PriceyHome == 1, "FN",0)))))
preds_train_DF <- data.frame(
class_pred05 = ifelse(preds_train_DF$scores_train
> 0.5, 1, 0),
preds_train_DF
)
preds_test_DF <- data.frame(
class_pred05 = ifelse(preds_test_DF$scores_test
> 0.5, 1, 0),
preds_test_DF
)
table(preds_train_DF$PosNeg05)
table(preds_train_DF$class_pred05,preds_train_DF$PriceyHome)
table(preds_test_DF$PosNeg05)
table(preds_test_DF$class_pred05,preds_test_DF$PriceyHome)
trainROC <- ggplot(data = preds_train_DF,
aes(m = scores_train,
d = PriceyHome)) +
geom_roc(labelsize = 3.5,
cutoffs.at = c(.99,.9,.7,.5,.3,.1,0))
trainROC
testROC <- ggplot(data = preds_test_DF,
aes(m = scores_test,
d = PriceyHome)) +
geom_roc(labelsize = 3.5,
cutoffs.at = c(.99,.9,.7,.5,.3,.1))
testROC
calc_auc(trainROC)
calc_auc(testROC)
?Boston
